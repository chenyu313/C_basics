//节假日 
/*日历有 阳历（公历） 和 阴历（农历） 之分。每年都有法定节假日，这些分成三类―双休、阳历节假日、阴历节假日。

双休

1）周六和周日 2 天

阳历节假日

1）元旦：阳历每年 1 月 1 日，放假 1 天

2）劳动节：阳历每年 5 月 1 日，放假 1 天

3）国庆节：阳历每年 10 月 1 日，放假 3 天

4）圣诞节：阳历每年 12 月 25 日，放假 1 天

阴历节假日

1）春节：阴历每年 1 月 1 日，放假 3 天

2）清明节：阳历每年 4 月 4 - 6 日之间的某天，放假 1 天

3）端午节：阴历每年 5 月 5 日，放假 1 天

4）中秋节：阴历每年 8 月 15 日, 放假 1 天

　当节假日和双休重合时，双休不延后也不提前，保证节假日之间不会重合。现在给你某年的所有阴历节假日的 阳历 日期，以及当年的 1 月 1 日是星期几，请你计算出这一年（阳历 1 月 1 日到 12 月 31 日）放了多少天假（包括双休、阳历节假日和阴历节假日）。

输入格式
第一行输入年份 y(1900<y≤2050)。

接下来 4 行，每行输入两个整数，m,d, 分别表示春节、清明节、端午节和中秋节的阳历日期。

最后一行一个整数表示当年 1 月 1 号是星期几（一周内的第几天，每周从星期一开始计数，即星期一为第一天）。

输出格式
输出一个整数，表示当年放假的天数。

样例输入
2017
1 28
4 4
5 30
10 4
7
样例输出
113
*/

#include<iostream>
using namespace std;
//表示放假的月份和日期(还未完，之后输入补齐) 
int mm[10]={1,5,10,10,10,12};
int dd[10]={1,1,1,2,3,25};
//每月的天数 
int day[12]={31,28,31,30,31,30,31,31,30,31,30,31};
int SF,ans; 
void next_day(int &m,int &d,int &w)
{
	d++;
	w++;
	if(d==day[m-1]+1)	//表示超过了该月
	{
		m++;
		d=1; 
	}
	if(w==8)
	{
		w=1;
	} 
}
int main()
{
	int y,m,d,w;		//SF表示春节还剩多少天，ans用来装答案
	cin>>y;
	m=1,d=1;		//初始化
	ans=0,SF=0;
	for(int i=6;i<10;i++) 	//将剩余假期的阳历装入其中 
	{
		cin>>mm[i]>>dd[i];
	}
	cin>>w;			//这个要注意，是1月1日是星期几 
	//判断是否为闰年
	if(y%400==0||(y%100!=0&&y%4==0)) 
	{
		day[1]=29;
	}
	while(m<13)
	{
		//首先判断春节 
		if(m==mm[6]&&d==dd[6])
		{
			ans++;
			SF=2;		//表示春节还剩2天 
		}
		else if(SF)		//求剩余的春节假期 
		{
			ans++;
			SF--;		
		}
		else if(w==6||w==7)
		{
			ans++;	
		} 
		//再判断其他的节假日
		else
		{
			for(int j=0;j<10;j++)
			{
				if(m==mm[j] && d==dd[j] && j!=6)	//排除春节 
				{
					ans++;
					break;	
				}	
			}
		}
		next_day(m,d,w);
	}
	cout<<ans<<endl;
	return 0;
}

